!function(){var t={};function n(t=null){this.identifiers={},this.parent=t}n.prototype={define:function(t,n){Object.defineProperty(this.identifiers,t,{get:function(){return n},set:function(){throw new Error(`Cannot update ${t}. It is a constant value.`)}})},initialize:function(t,n){const e=typeof n;let r=n;Object.defineProperty(this.identifiers,t,{get:function(){return r},set:function(n){if(typeof n!==e)throw new Error(`Cannot assign '${n}' to '${t}'. New value type must be '${e}'`);r=n}})},read:function(t){if(void 0!==this.identifiers[t])return this.identifiers[t];if(null!==this.parent)return this.parent.read(t);throw new Error(`Cannot read variable '${t}'. It has not been created.`)},update:function(t,n){if(void 0!==this.identifiers[t])this.identifiers[t]=n;else{if(null===this.parent)throw new Error(`Cannot update variable '${t}'. It has not been created.`);this.parent.update(t,n)}},new:function(){return n.new(this)},getIdentifiers:function(){return Object.keys(this.identifiers)}},n.new=function(t){return new n(t)},t=n;var e;function r(){}function o(){const t=new r;return Object.freeze(t)}function i(){this.dictionary={}}function s(t){return t.split("\n").map(t=>"    "+t).join("\n")}function a(t,n,e){if("number"!=typeof n||"number"!=typeof e)throw new Error(`All values provided to ${t} must be numbers; values received are: ${n} of type ${typeof n} and ${e} of type ${typeof e}`)}r.prototype={toString:()=>"nil"},i.prototype={getSafeKey:function(t){if("string"!=typeof t)throw new Error("Dictionary keys can only be strings.");return t.toLowerCase()},keys:function(){return Object.keys(this.dictionary)},hasKey:function(t){const n=this.getSafeKey(t);return void 0!==this.dictionary[n]},read:function(t){const n=this.getSafeKey(t);return void 0!==this.dictionary[n]?this.dictionary[n]:o()},remove:function(t){const n=this.getSafeKey(t);this.dictionary[n]=void 0,delete this.dictionary[n]},set:function(t,n){const e=this.getSafeKey(t);return this.dictionary[e]=n,this},toString:function(){let t=Object.keys(this.dictionary).map(t=>(value="string"==typeof this.dictionary[t]?`"${this.dictionary[t]}"`:this.dictionary[t].toString(),1===value.split("\n").length?s(`${t}: ${value}`):s(`${t}: \n${s(value)}`)));return["Dictionary {"].concat(t).concat(["}"]).join("\n")}},e=function(t){return{newArray:function(...t){return t},appendTo:function(t,n){if(!Array.isArray(t))throw new Error("Append can only add values to an array.");return t.push(n),t},newDictionary:function(){return new i},hasKey:function(t,n){if(!t instanceof i)throw new Error("Keys can only be accessed on a dictionary.");return t.hasKey(n)},getKeysFrom:function(t){if(!t instanceof i)throw new Error("Keys can only be accessed on a dictionary.");return t.keys()},readFrom:function(t,n){if(t instanceof i){const e=n.toLowerCase();return t.read(e)}if(Array.isArray(t)){const e=parseInt(n)-1;return void 0!==t[e]?t[e]:o()}throw new Error("Read can only be used on dictionaries and arrays.")},removeFrom:function(t,n){if(t instanceof i){const e=n.remove(n);return t.read(e)}if(Array.isArray(t)){const e=parseInt(n);return t.splice(e,1),t}throw new Error("Remove can only be used on dictionaries and arrays.")},setOn:function(t,n,e){if(!t instanceof i)throw new Error("Values may only be set on a dictionary.");return t.set(n.toLowerCase(),e),t},isNil:function(t){return t instanceof r},newNil:function(){return o()},print:function(...t){t.forEach((function(t){"object"==typeof window&&"function"==typeof window.print?window.print(t):console.log(t)}))},prompt:function(n){if("object"==typeof window){const t=prompt(n);return null===t?"":t.trim()}return t()(n).trim()},join:function(...t){return t.join("")},toLowerCase:function(t){return t.toLowerCase()},toUpperCase:function(t){return t.toUpperCase()},toArray:function(t,n=""){return t.split(n)},getCharacterAtIndex:function(t,n){if("string"!=typeof t)throw new Error(`Cannot read characters from a non-string value. Got ${t} of type ${typeof t}.`);return t[n-1]},lengthOf:function(t){return t.length},not:function(t){if("boolean"!=typeof t)throw new Error(`Cannot apply 'not' function to non-boolean values. Got value ${t} of type ${typeof t}`);return!t},random:function(t=0,n=1){a("random",t,n);const e=(t>=n?t+Math.abs(n):n)-t;return Math.random()*e+t},absoluteValue:function(t){return Math.abs(t)},floor:function(t){return Math.floor(t)},ceiling:function(t){return Math.ceil(t)},squareRoot:function(t){return Math.sqrt(t)},power:function(t,n){return a("power",t,n),Math.pow(t,n)},maximum:function(t,n){return a("maximum",t,n),t>n?t:n},minimum:function(t,n){return a("minimum",t,n),t<n?t:n},remainder:function(t,n){return a("modulus",t,n),t%n},round:function(t,n){a("round",t,n);const e=Math.pow(10,n);return Math.round(t*e)/e},log:function(t,n=Math.E){return a("log",t,n),Math.log(t)/Math.log(n)}}};const c=["true","false"],u=["be","as","to","with","while"],f=["loop","repeat","if","else"],l=["::","toInfix"],p={operators:["+","-","*","/"],openGroupDelimiter:"(",closeGroupDelimiter:")",functionExecutionIndicator:":",stringBeginIndicator:'"',stringEndIndicator:'"',stringEscapeCharacter:"\\",commentCharacter:"#",whitespaceCharacter:"s",subtractionToken:"-"},h=["isGreaterThan","isLessThan","isGreaterOrEqualTo","isLessOrEqualTo","isEqualTo"].map(t=>t.toLowerCase()),y={Number:t=>/^\-?[0-9]+(\.[0-9]+)?$/.test(t),Boolean:t=>c.includes(t.toLowerCase()),String:t=>t[0]===p.stringBeginIndicator&&t[t.length-1]===p.stringEndIndicator,InfixOperator:t=>l.includes(t),Operator:t=>p.operators.concat(["and","or"]).concat(h).includes(t),FunctionExecutionIndicator:t=>t===p.functionExecutionIndicator,OpenGroupDelimiter:t=>t===p.openGroupDelimiter,CloseGroupDelimiter:t=>t===p.closeGroupDelimiter,OpenBlockDelimiter:t=>"begin"===t.toLowerCase(),CloseBlockDelimiter:t=>"end"===t.toLowerCase(),TransitionalOperator:t=>u.includes(t.toLowerCase()),CallOperator:t=>"call"===t.toLowerCase(),ControlOperator:t=>f.includes(t.toLowerCase()),Identifier:()=>!0},d=Object.keys(y).map(t=>({type:t,test:y[t]}));var w={grammarTypes:Object.keys(y).reduce((function(t,n){return t["is"+n]=y[n],t}),{}),tokenTypes:Object.keys(y).reduce((function(t,n){return t[n]=n,t}),{}),getTokenType:function(t){const n=d.filter(n=>n.test(t)).map(t=>t.type)[0];if(void 0===n)throw new Error("Unknown value or symbol in source code: "+t);return n},characterSet:p};const m=w.tokenTypes,{stringBeginIndicator:g,stringEndIndicator:b,stringEscapeCharacter:v,commentCharacter:k,whitespaceCharacter:E,subtractionToken:$}=w.characterSet;function S(t){return/[\s\t]/.test(t)}function C(t){let n="",e=0;for(let r=0;r<t.length;r++){const o=t[r];if(o===v)n+=t[r+1],r++;else{if(o===b){e=r+1;break}n+=o}e=r}return[n,e]}function x(t,n){const e=t.split(""),r=[];let o;const i=function(t){return function(n,e){if(""!==n){const r=n[0]===g?n:n.toLowerCase();t.push(function(t,n){return{line:n,token:t,type:w.getTokenType(t)}}(r,e))}}}(r),s=()=>o="",a=()=>{i(o,n),s()};s();for(let c=0;c<e.length;c++){const t=e[c];if(t===k)break;if(":"===t&&":"===e[c+1])a(),o="::",c++,a();else if(w.grammarTypes.isOperator(t)||w.grammarTypes.isOpenGroupDelimiter(t)||w.grammarTypes.isCloseGroupDelimiter(t)||w.grammarTypes.isFunctionExecutionIndicator(t)){a(),o=t;const n=r[r.length-1];t===$&&n.type!==m.Number&&n.type!==m.CloseGroupDelimiter||a()}else if(t===g){a();const[t,n]=C(e.slice(c+1));o=`${g}${t}${b}`,a(),c+=n}else S(t)&&""!==o?a():S(t)||(o+=t)}return a(),r}var O=function(t){const n=t.split(/\r?\n/),e=[];for(let r=0;r<n.length;r++){const t=x(n[r],r+1);t.length>0&&e.push(t)}return e};function T(t){return"object"==typeof t&&"function"==typeof t.then?t:Promise.resolve(t)}var I={promisifyExec:function(t,n){return T(t.execute(n))},promisifyResult:T},j={};const{promisifyExec:A}=I;function B(t){this.type="BinaryExpression",this.operator=t}const L={"+":(t,n)=>t+n,"-":(t,n)=>t-n,"*":(t,n)=>t*n,"/":(t,n)=>t/n},G={and:(t,n)=>t&&n,or:(t,n)=>t||n};function D(t,n){return function(e,r){if("number"!=typeof e||"number"!=typeof r)throw new Error(`Cannot compare non-number values with ${t} operator.`);return n(e,r)}}const M={isgreaterghan:D("isGreaterThan",(t,n)=>t>n),islessthan:D("isLessThan",(t,n)=>t<n),isgreaterorequalto:D("isGreaterOrEqualTo",(t,n)=>!(t<n)),islessorequalto:D("isLessOrEqualTo",(t,n)=>!(t>n)),isequalto:(t,n)=>t===n};B.prototype={setLeft:function(t){this.left=t},setRight:function(t){this.right=t},toString:function(){return`${this.left.toString()} ${this.operator} ${this.right.toString()}`},performOperation:function(t,n){return Object.keys(L).includes(this.operator)?function(t,n,e){if("number"!=typeof n||"number"!=typeof e)throw new Error(`Arithmetic operations can only be run on numbers. Received ${n} of type ${typeof n} && ${e} of type ${typeof e}.`);return L[t](n,e)}(this.operator,t,n):Object.keys(M).includes(this.operator)?(e=this.operator,r=t,o=n,M[e](r,o)):function(t,n,e){return G[t](n,e)}(this.operator,t,n);var e,r,o},execute:async function(t){let n=await A(this.left,t),e=await A(this.right,t);return await Promise.resolve(this.performOperation(n,e))}},B.new=function(t){return new B(t)},j=B;var K=function(t,n){return n.split("\n").map(n=>t+n).join("\n")},P={};const{promisifyExec:R}=I;function q(t,n){this.type="Conditional",this.blockType=t,this.condition=n,this.success=[],this.fail=null}q.prototype={setSuccess:function(t){this.success=Array.isArray(t)?t:[]},setFail:function(t){null===this.fail?this.fail=t:this.fail.setFail(t)},toString:function(){const t=`${blockType} ${"else"!==blockType?this.condition.toString():""}`,n=this.success.map(t=>K("    ",t.toString()));let e=[t].concat(n);return null!==this.fail&&e.concat(this.fail.toString()),"if"===this.blockType&&e.concat("end"),e.join("\n")},execute:async function(t){const n=t.new();let e;if(await R(this.condition,n)){const t=this.success;for(let r=0;r<t.length;r++)e=await R(t[r],n);return e}return R(this.fail,t)}},q.new=function(t,n){return new q(t,n)},P=q;var F={};const{promisifyExec:N,promisifyResult:U}=I;function z(t){this.type="FunctionCall",this.name=t,this.arguments=[]}z.prototype={addArguments:function(t){this.arguments=t},toString:function(){const t=this.arguments.map(t=>t.toString());return[this.name+":"].concat(t).join(" ")},execute:async function(t){const n=t.read(this.name);if("function"!=typeof n)throw new Error(`Cannot call ${this.name}, it is not a function.`);{let e=[];for(let n=0;n<this.arguments.length;n++){const r=await N(this.arguments[n],t);e.push(r)}return await U(n.apply(null,e))}}},z.new=function(t){return new z(t)},F=z;var V={};const{promisifyExec:H}=I;function J(){this.type="Group",this.body}J.prototype={setBody:function(t){this.body=t},toString:function(){return`(${this.body.toString()})`},execute:async function(t){return await H(this.body,t)}},J.new=function(){return new J},V=J;var Q={};function W(t){this.type="Identifier",this.name=t}W.prototype={toString:function(){return this.name},execute:async function(t){return await Promise.resolve(t.read(this.name))}},W.new=function(t){return new W(t)},Q=W;var X={};const{promisifyExec:Y}=I;function Z(t,n,e){this.type="InitializationExpression",this.variableType=t,this.identifier=n,this.value=e}Z.prototype={toString:function(){return"let"===this.variableType?`let ${this.identifier.toString()} be ${this.value.toString()}`:`define ${this.identifier.toString()} as ${this.value.toString()}`},execute:async function(t){const n=await Y(this.value,t);return"let"===this.variableType?t.initialize(this.identifier.name,n):t.define(this.identifier.name,n),n}},Z.new=function(t,n,e){return new Z(t,n,e)},X=Z;var _={};const{promisifyResult:tt}=I;function nt(t){this.type="Literal",this.value=function(t){switch(t.type){case"String":return t.token.replace(/^\"(.*)\"$/,"$1");case"Number":return Number(t.token);case"Boolean":return"true"===t.token;default:return null}}(t)}nt.prototype={toString:function(){return"string"==typeof this.value?`"${this.value}"`:this.value.toString()},execute:async function(){return await tt(this.value)}},nt.new=function(t){return new nt(t)},_=nt;var et={};const{promisifyExec:rt}=I;function ot(t){this.type="Loop",this.condition=t,this.body=[]}ot.prototype={setBody:function(t){this.body=t},toString:function(){const t="loop while "+this.condition.toString(),n=this.body.map(t=>K("    ",t.toString()));return[t].concat(n).concat(["end"]).join("\n")},execute:async function(t){const n=t.new();let e,r=await rt(this.condition,n);for(;r;){const t=n.new();for(let n=0;n<this.body.length;n++)e=await rt(this.body[n],t);r=await rt(this.condition,n)}return e}},ot.new=function(t){return new ot(t)},et=ot;var it={};const{promisifyExec:st}=I;function at(t){this.type="Program",this.body=t}at.prototype={addBodyNode:function(t){this.body.push(t)},toString:function(){const t=this.body.map(t=>K("    ",t.toString()));return["begin"].concat(t).concat("end").join("\n")},execute:async function(t){try{for(let n=0;n<this.body.length;n++)await st(this.body[n],t)}catch(n){t.read("print")(n.message)}}},at.new=function(t){return new at(t)},it=at;var ct={};const{promisifyExec:ut}=I;function ft(t,n){this.type="UpdateExpression",this.identifier=t,this.value=n}function lt(t,n){return t.splice(0,n),t}function pt(t){return t.map(t=>Array.isArray(t)?t[0].token.toString():t.token.toString()).join(" ")}function ht(t){return t.splice(0,1)[0]}function yt(t,n){const e=mt(lt(t,2).slice(0)),r=et.new(e),o=dt(n);return r.setBody(o),r}function dt(t){const n=[];for(;t.length>0&&"end"!==t[0][0].token;){const r=ht(t);let o;if("if"===r[0].token){const n=mt(lt(r,1).slice(0)),e=P.new("if",n),i=dt(t);let s,a;e.setSuccess(i);do{if(a=(s="else"===t[0][0].token)&&1===t[0].length,s){const n=a?"else":"else if";let r;a?r=_.new({type:"Boolean",token:"true"}):(lt(t[0],2),r=mt(t[0]));const o=P.new(n,r),i=dt(lt(t,1));o.setSuccess(i),e.setFail(o)}if(a)break}while(s);o=e}else{if("else"===r[0].token)return t.unshift(r),n;o="loop"!==(e=r)[0].token&&"repeat"!==e[0].token||"while"!==e[1].token?mt(r.slice(0)):yt(r,t)}n.push(o)}var e;if(0===t.length)throw new Error('Incomplete program: an "end" declaration is missing.');return lt(t,1),n}ft.prototype={toString:function(){return`update ${this.identifier.toString()} to ${this.value.toString()}`},execute:async function(t){const n=await ut(this.value,t);return t.update(this.identifier.name,n),n}},ft.new=function(t,n){return new ft(t,n)},ct=ft;const wt=[[function(t){return t.length>2&&(vt([t[0]])||kt([t[0]]))&&function(t){return"Operator"===t[0].type}([t[1]])},function(t){const n=j.new(t[1].token);if(n.setLeft(mt([t[0]])),["and","*","/"].includes(t[1].token)){let e;if(vt([t[2]])||kt([t[2]]))e=t[2],lt(t,3);else{if(!Et([t[2]]))throw new Error("Arithmetic expression contains an error: ",pt(t));$t(lt(t,2)),e=t[0],lt(t,1)}n.setRight(mt([e]));const r=function(t){return{type:"ParsedBinaryExpression",token:t}}(n);return t.unshift(r),mt(t)}return n.setRight(mt(lt(t,2))),n}],[vt,function(t){return bt.includes(t[0].type)?t[0].token:_.new(t[0])}],[Et,$t],[kt,function(t){return Q.new(t[0].token)}],[function(t){return t.length>3&&("let"===t[0].token&&"be"===t[2].token||"define"===t[0].token&&"as"===t[2].token)},function(t){const n=t[0].token,e=Q.new(t[1].token),r=mt(lt(t,3));return X.new(n,e,r)}],[function(t){return t.length>3&&"update"===t[0].token&&"to"===t[2].token},function(t){const n=Q.new(t[1].token),e=mt(lt(t,3));return ct.new(n,e)}],[function(t){return t.length>2&&"Identifier"===t[0].type&&"FunctionExecutionIndicator"===t[1].type||"CallOperator"===t[0].type||"InfixOperator"===t[0].type},function(t){if("CallOperator"===t[0].type)lt(t,1);else if("InfixOperator"===t[0].type){const n=t[0],e=t[2],r=t[1];t[0]=e,t[1]=n,t[2]=r}const n=F.new(t[0].token),e=mt(lt(t,2)),r=Array.isArray(e)?e:[e].filter(t=>Boolean(t));return n.addArguments(r),n}]];function mt(t){if(0===t.length)return;const n=wt.find(n=>n[0](t));if(function(t){return"CloseGroupDelimiter"===t[0].type}(t))lt(t,1);else{if(Boolean(n))return n[1](t);if(t.length>1&&"operator"!==t[0].type){const n=mt([t[0]]);if(lt(t,1),"operator"===t[0].type)return n;{const e=mt(t);return Boolean(e)?[n].concat(e):n}}!function(t){const n=Boolean(t[0].line)?t[0].line:"unknown line";throw new Error(`Unable to interpret this program, an error exists at line ${n} near "${pt(t)}"`)}(t)}}const gt=["Number","Boolean","String"],bt=["ParsedTokenSet","ParsedBinaryExpression"];function vt(t){return 1===t.length&&(gt.includes(t[0].type)||bt.includes(t[0].type))}function kt(t){return 1===t.length&&"Identifier"===t[0].type}function Et(t){return"OpenGroupDelimiter"===t[0].type}function $t(t){const n=V.new(),e=mt(lt(t,1));if(!Boolean(e)||Array.isArray(e))throw new Error(`Unparseable group in source: "${pt(t)}"`);n.setBody(e);const r={type:"ParsedTokenSet",token:n};return t.unshift(r),mt(t)}var St=function(t){const n=dt(t.slice(1));return it.new(n)},Ct=function(n,r){const o=function(n){const r=t.new(),o=e(n);return Object.keys(o).forEach((function(t){r.define(t.toLowerCase(),o[t])})),r}(r);(function(t){const n=O(t);return St(n)})(n).execute(o)};"object"==typeof window&&(window.loadAndRunProgram=Ct)}();